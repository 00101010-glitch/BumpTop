// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BumpTop.proto

#ifndef PROTOBUF_BumpTop_2eproto__INCLUDED
#define PROTOBUF_BumpTop_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Nx.pb.h"
#include "PhotoFrameSource.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BumpTop_2eproto();
void protobuf_AssignDesc_BumpTop_2eproto();
void protobuf_ShutdownFile_BumpTop_2eproto();

class PbBumpTop;
class PbHeader;
class PbScene;
class PbBumpObject;
class PbPile;
class PbPile_PbPileItem;
class PbActor;
class PbFileSystemActor;
class PbFileSystemActor_PbCachedFilePathDims;
class PbCustomActor;
class PbPhotoFrameActor;
class PbWebActor;
class PbCamera;

// ===================================================================

class PbBumpTop : public ::google::protobuf::Message {
 public:
  PbBumpTop();
  virtual ~PbBumpTop();
  
  PbBumpTop(const PbBumpTop& from);
  
  inline PbBumpTop& operator=(const PbBumpTop& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbBumpTop& default_instance();
  
  void Swap(PbBumpTop* other);
  
  // implements Message ----------------------------------------------
  
  PbBumpTop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbBumpTop& from);
  void MergeFrom(const PbBumpTop& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PbHeader header = 1;
  inline bool has_header() const;
  inline void clear_header();
  static const int kHeaderFieldNumber = 1;
  inline const ::PbHeader& header() const;
  inline ::PbHeader* mutable_header();
  inline ::PbHeader* release_header();
  
  // optional .PbScene scene = 2;
  inline bool has_scene() const;
  inline void clear_scene();
  static const int kSceneFieldNumber = 2;
  inline const ::PbScene& scene() const;
  inline ::PbScene* mutable_scene();
  inline ::PbScene* release_scene();
  
  // @@protoc_insertion_point(class_scope:PbBumpTop)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_scene();
  inline void clear_has_scene();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PbHeader* header_;
  ::PbScene* scene_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbBumpTop* default_instance_;
};
// -------------------------------------------------------------------

class PbHeader : public ::google::protobuf::Message {
 public:
  PbHeader();
  virtual ~PbHeader();
  
  PbHeader(const PbHeader& from);
  
  inline PbHeader& operator=(const PbHeader& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbHeader& default_instance();
  
  void Swap(PbHeader* other);
  
  // implements Message ----------------------------------------------
  
  PbHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbHeader& from);
  void MergeFrom(const PbHeader& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string build = 1;
  inline bool has_build() const;
  inline void clear_build();
  static const int kBuildFieldNumber = 1;
  inline const ::std::string& build() const;
  inline void set_build(const ::std::string& value);
  inline void set_build(const char* value);
  inline void set_build(const char* value, size_t size);
  inline ::std::string* mutable_build();
  inline ::std::string* release_build();
  
  // optional int32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PbHeader)
 private:
  inline void set_has_build();
  inline void clear_has_build();
  inline void set_has_version();
  inline void clear_has_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* build_;
  ::google::protobuf::int32 version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbHeader* default_instance_;
};
// -------------------------------------------------------------------

class PbScene : public ::google::protobuf::Message {
 public:
  PbScene();
  virtual ~PbScene();
  
  PbScene(const PbScene& from);
  
  inline PbScene& operator=(const PbScene& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbScene& default_instance();
  
  void Swap(PbScene* other);
  
  // implements Message ----------------------------------------------
  
  PbScene* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbScene& from);
  void MergeFrom(const PbScene& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string working_directory = 1;
  inline bool has_working_directory() const;
  inline void clear_working_directory();
  static const int kWorkingDirectoryFieldNumber = 1;
  inline const ::std::string& working_directory() const;
  inline void set_working_directory(const ::std::string& value);
  inline void set_working_directory(const char* value);
  inline void set_working_directory(const char* value, size_t size);
  inline ::std::string* mutable_working_directory();
  inline ::std::string* release_working_directory();
  
  // repeated .PbBumpObject free_objects = 10;
  inline int free_objects_size() const;
  inline void clear_free_objects();
  static const int kFreeObjectsFieldNumber = 10;
  inline const ::PbBumpObject& free_objects(int index) const;
  inline ::PbBumpObject* mutable_free_objects(int index);
  inline ::PbBumpObject* add_free_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::PbBumpObject >&
      free_objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::PbBumpObject >*
      mutable_free_objects();
  
  // repeated .PbBumpObject piles = 11;
  inline int piles_size() const;
  inline void clear_piles();
  static const int kPilesFieldNumber = 11;
  inline const ::PbBumpObject& piles(int index) const;
  inline ::PbBumpObject* mutable_piles(int index);
  inline ::PbBumpObject* add_piles();
  inline const ::google::protobuf::RepeatedPtrField< ::PbBumpObject >&
      piles() const;
  inline ::google::protobuf::RepeatedPtrField< ::PbBumpObject >*
      mutable_piles();
  
  // optional .PbCamera camera = 12;
  inline bool has_camera() const;
  inline void clear_camera();
  static const int kCameraFieldNumber = 12;
  inline const ::PbCamera& camera() const;
  inline ::PbCamera* mutable_camera();
  inline ::PbCamera* release_camera();
  
  // @@protoc_insertion_point(class_scope:PbScene)
 private:
  inline void set_has_working_directory();
  inline void clear_has_working_directory();
  inline void set_has_camera();
  inline void clear_has_camera();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* working_directory_;
  ::google::protobuf::RepeatedPtrField< ::PbBumpObject > free_objects_;
  ::google::protobuf::RepeatedPtrField< ::PbBumpObject > piles_;
  ::PbCamera* camera_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbScene* default_instance_;
};
// -------------------------------------------------------------------

class PbBumpObject : public ::google::protobuf::Message {
 public:
  PbBumpObject();
  virtual ~PbBumpObject();
  
  PbBumpObject(const PbBumpObject& from);
  
  inline PbBumpObject& operator=(const PbBumpObject& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbBumpObject& default_instance();
  
  void Swap(PbBumpObject* other);
  
  // implements Message ----------------------------------------------
  
  PbBumpObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbBumpObject& from);
  void MergeFrom(const PbBumpObject& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string class_name = 1;
  inline bool has_class_name() const;
  inline void clear_class_name();
  static const int kClassNameFieldNumber = 1;
  inline const ::std::string& class_name() const;
  inline void set_class_name(const ::std::string& value);
  inline void set_class_name(const char* value);
  inline void set_class_name(const char* value, size_t size);
  inline ::std::string* mutable_class_name();
  inline ::std::string* release_class_name();
  
  // optional fixed32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional .PbPoseDims pose_Dims = 3;
  inline bool has_pose_dims() const;
  inline void clear_pose_dims();
  static const int kPoseDimsFieldNumber = 3;
  inline const ::PbPoseDims& pose_dims() const;
  inline ::PbPoseDims* mutable_pose_dims();
  inline ::PbPoseDims* release_pose_dims();
  
  // optional string text = 10;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 10;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // optional bool text_visible = 11;
  inline bool has_text_visible() const;
  inline void clear_text_visible();
  static const int kTextVisibleFieldNumber = 11;
  inline bool text_visible() const;
  inline void set_text_visible(bool value);
  
  // optional .PbVec3 pin_point_world = 15;
  inline bool has_pin_point_world() const;
  inline void clear_pin_point_world();
  static const int kPinPointWorldFieldNumber = 15;
  inline const ::PbVec3& pin_point_world() const;
  inline ::PbVec3* mutable_pin_point_world();
  inline ::PbVec3* release_pin_point_world();
  
  // optional .PbVec3 pin_point_actor = 16;
  inline bool has_pin_point_actor() const;
  inline void clear_pin_point_actor();
  static const int kPinPointActorFieldNumber = 16;
  inline const ::PbVec3& pin_point_actor() const;
  inline ::PbVec3* mutable_pin_point_actor();
  inline ::PbVec3* release_pin_point_actor();
  
  // optional bool pinned = 17;
  inline bool has_pinned() const;
  inline void clear_pinned();
  static const int kPinnedFieldNumber = 17;
  inline bool pinned() const;
  inline void set_pinned(bool value);
  
  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(PbBumpObject)
  // @@protoc_insertion_point(class_scope:PbBumpObject)
 private:
  inline void set_has_class_name();
  inline void clear_has_class_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_pose_dims();
  inline void clear_has_pose_dims();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_text_visible();
  inline void clear_has_text_visible();
  inline void set_has_pin_point_world();
  inline void clear_has_pin_point_world();
  inline void set_has_pin_point_actor();
  inline void clear_has_pin_point_actor();
  inline void set_has_pinned();
  inline void clear_has_pinned();
  
  ::google::protobuf::internal::ExtensionSet _extensions_;
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* class_name_;
  ::PbPoseDims* pose_dims_;
  ::std::string* text_;
  ::google::protobuf::uint32 type_;
  bool text_visible_;
  bool pinned_;
  ::PbVec3* pin_point_world_;
  ::PbVec3* pin_point_actor_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbBumpObject* default_instance_;
};
// -------------------------------------------------------------------

class PbPile_PbPileItem : public ::google::protobuf::Message {
 public:
  PbPile_PbPileItem();
  virtual ~PbPile_PbPileItem();
  
  PbPile_PbPileItem(const PbPile_PbPileItem& from);
  
  inline PbPile_PbPileItem& operator=(const PbPile_PbPileItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbPile_PbPileItem& default_instance();
  
  void Swap(PbPile_PbPileItem* other);
  
  // implements Message ----------------------------------------------
  
  PbPile_PbPileItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbPile_PbPileItem& from);
  void MergeFrom(const PbPile_PbPileItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PbBumpObject item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::PbBumpObject& item() const;
  inline ::PbBumpObject* mutable_item();
  inline ::PbBumpObject* release_item();
  
  // optional .PbMat34 original_world_pose = 2;
  inline bool has_original_world_pose() const;
  inline void clear_original_world_pose();
  static const int kOriginalWorldPoseFieldNumber = 2;
  inline const ::PbMat34& original_world_pose() const;
  inline ::PbMat34* mutable_original_world_pose();
  inline ::PbMat34* release_original_world_pose();
  
  // @@protoc_insertion_point(class_scope:PbPile.PbPileItem)
 private:
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_original_world_pose();
  inline void clear_has_original_world_pose();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PbBumpObject* item_;
  ::PbMat34* original_world_pose_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbPile_PbPileItem* default_instance_;
};
// -------------------------------------------------------------------

class PbPile : public ::google::protobuf::Message {
 public:
  PbPile();
  virtual ~PbPile();
  
  PbPile(const PbPile& from);
  
  inline PbPile& operator=(const PbPile& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbPile& default_instance();
  
  void Swap(PbPile* other);
  
  // implements Message ----------------------------------------------
  
  PbPile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbPile& from);
  void MergeFrom(const PbPile& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PbPile_PbPileItem PbPileItem;
  
  // accessors -------------------------------------------------------
  
  static const int kExtMinTagFieldNumber = 100;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    ext_min_tag;
  static const int kChildrenFieldNumber = 111;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::PbPile_PbPileItem >, 11, false >
    children;
  // @@protoc_insertion_point(class_scope:PbPile)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbPile* default_instance_;
};
// -------------------------------------------------------------------

class PbActor : public ::google::protobuf::Message {
 public:
  PbActor();
  virtual ~PbActor();
  
  PbActor(const PbActor& from);
  
  inline PbActor& operator=(const PbActor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbActor& default_instance();
  
  void Swap(PbActor* other);
  
  // implements Message ----------------------------------------------
  
  PbActor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbActor& from);
  void MergeFrom(const PbActor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  static const int kExtMinTagFieldNumber = 200;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    ext_min_tag;
  // @@protoc_insertion_point(class_scope:PbActor)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbActor* default_instance_;
};
// -------------------------------------------------------------------

class PbFileSystemActor_PbCachedFilePathDims : public ::google::protobuf::Message {
 public:
  PbFileSystemActor_PbCachedFilePathDims();
  virtual ~PbFileSystemActor_PbCachedFilePathDims();
  
  PbFileSystemActor_PbCachedFilePathDims(const PbFileSystemActor_PbCachedFilePathDims& from);
  
  inline PbFileSystemActor_PbCachedFilePathDims& operator=(const PbFileSystemActor_PbCachedFilePathDims& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbFileSystemActor_PbCachedFilePathDims& default_instance();
  
  void Swap(PbFileSystemActor_PbCachedFilePathDims* other);
  
  // implements Message ----------------------------------------------
  
  PbFileSystemActor_PbCachedFilePathDims* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbFileSystemActor_PbCachedFilePathDims& from);
  void MergeFrom(const PbFileSystemActor_PbCachedFilePathDims& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string file_path = 1;
  inline bool has_file_path() const;
  inline void clear_file_path();
  static const int kFilePathFieldNumber = 1;
  inline const ::std::string& file_path() const;
  inline void set_file_path(const ::std::string& value);
  inline void set_file_path(const char* value);
  inline void set_file_path(const char* value, size_t size);
  inline ::std::string* mutable_file_path();
  inline ::std::string* release_file_path();
  
  // optional .PbVec3 dims = 2;
  inline bool has_dims() const;
  inline void clear_dims();
  static const int kDimsFieldNumber = 2;
  inline const ::PbVec3& dims() const;
  inline ::PbVec3* mutable_dims();
  inline ::PbVec3* release_dims();
  
  // @@protoc_insertion_point(class_scope:PbFileSystemActor.PbCachedFilePathDims)
 private:
  inline void set_has_file_path();
  inline void clear_has_file_path();
  inline void set_has_dims();
  inline void clear_has_dims();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* file_path_;
  ::PbVec3* dims_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbFileSystemActor_PbCachedFilePathDims* default_instance_;
};
// -------------------------------------------------------------------

class PbFileSystemActor : public ::google::protobuf::Message {
 public:
  PbFileSystemActor();
  virtual ~PbFileSystemActor();
  
  PbFileSystemActor(const PbFileSystemActor& from);
  
  inline PbFileSystemActor& operator=(const PbFileSystemActor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbFileSystemActor& default_instance();
  
  void Swap(PbFileSystemActor* other);
  
  // implements Message ----------------------------------------------
  
  PbFileSystemActor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbFileSystemActor& from);
  void MergeFrom(const PbFileSystemActor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PbFileSystemActor_PbCachedFilePathDims PbCachedFilePathDims;
  
  // accessors -------------------------------------------------------
  
  static const int kExtMinTagFieldNumber = 300;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    ext_min_tag;
  static const int kFullPathFieldNumber = 310;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    full_path;
  static const int kLaunchOverridePathFieldNumber = 311;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    launch_override_path;
  static const int kTextureOverridePathFieldNumber = 312;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    texture_override_path;
  static const int kPileizedFieldNumber = 320;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
    pileized;
  static const int kThumbnailizedFieldNumber = 321;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
    thumbnailized;
  static const int kLaunchCountFieldNumber = 330;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    launch_count;
  static const int kPrevPileizedChildrenDimsFieldNumber = 340;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::RepeatedMessageTypeTraits< ::PbFileSystemActor_PbCachedFilePathDims >, 11, false >
    prev_pileized_children_dims;
  // @@protoc_insertion_point(class_scope:PbFileSystemActor)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbFileSystemActor* default_instance_;
};
// -------------------------------------------------------------------

class PbCustomActor : public ::google::protobuf::Message {
 public:
  PbCustomActor();
  virtual ~PbCustomActor();
  
  PbCustomActor(const PbCustomActor& from);
  
  inline PbCustomActor& operator=(const PbCustomActor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbCustomActor& default_instance();
  
  void Swap(PbCustomActor* other);
  
  // implements Message ----------------------------------------------
  
  PbCustomActor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbCustomActor& from);
  void MergeFrom(const PbCustomActor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  static const int kExtMinTagFieldNumber = 400;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    ext_min_tag;
  static const int kImplClassNameFieldNumber = 401;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    impl_class_name;
  // @@protoc_insertion_point(class_scope:PbCustomActor)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbCustomActor* default_instance_;
};
// -------------------------------------------------------------------

class PbPhotoFrameActor : public ::google::protobuf::Message {
 public:
  PbPhotoFrameActor();
  virtual ~PbPhotoFrameActor();
  
  PbPhotoFrameActor(const PbPhotoFrameActor& from);
  
  inline PbPhotoFrameActor& operator=(const PbPhotoFrameActor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbPhotoFrameActor& default_instance();
  
  void Swap(PbPhotoFrameActor* other);
  
  // implements Message ----------------------------------------------
  
  PbPhotoFrameActor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbPhotoFrameActor& from);
  void MergeFrom(const PbPhotoFrameActor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  static const int kExtMinTagFieldNumber = 500;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    ext_min_tag;
  static const int kSourceTypeFieldNumber = 501;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    source_type;
  static const int kSourceFieldNumber = 502;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::MessageTypeTraits< ::PbPhotoFrameSource >, 11, false >
    source;
  // @@protoc_insertion_point(class_scope:PbPhotoFrameActor)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbPhotoFrameActor* default_instance_;
};
// -------------------------------------------------------------------

class PbWebActor : public ::google::protobuf::Message {
 public:
  PbWebActor();
  virtual ~PbWebActor();
  
  PbWebActor(const PbWebActor& from);
  
  inline PbWebActor& operator=(const PbWebActor& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbWebActor& default_instance();
  
  void Swap(PbWebActor* other);
  
  // implements Message ----------------------------------------------
  
  PbWebActor* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbWebActor& from);
  void MergeFrom(const PbWebActor& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  static const int kExtMinTagFieldNumber = 600;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    ext_min_tag;
  static const int kTypeFieldNumber = 601;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::uint32 >, 13, false >
    type;
  static const int kContentFieldNumber = 602;
  static ::google::protobuf::internal::ExtensionIdentifier< ::PbBumpObject,
      ::google::protobuf::internal::StringTypeTraits, 9, false >
    content;
  // @@protoc_insertion_point(class_scope:PbWebActor)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbWebActor* default_instance_;
};
// -------------------------------------------------------------------

class PbCamera : public ::google::protobuf::Message {
 public:
  PbCamera();
  virtual ~PbCamera();
  
  PbCamera(const PbCamera& from);
  
  inline PbCamera& operator=(const PbCamera& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbCamera& default_instance();
  
  void Swap(PbCamera* other);
  
  // implements Message ----------------------------------------------
  
  PbCamera* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbCamera& from);
  void MergeFrom(const PbCamera& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PbVec3 eye = 1;
  inline bool has_eye() const;
  inline void clear_eye();
  static const int kEyeFieldNumber = 1;
  inline const ::PbVec3& eye() const;
  inline ::PbVec3* mutable_eye();
  inline ::PbVec3* release_eye();
  
  // optional .PbVec3 up = 2;
  inline bool has_up() const;
  inline void clear_up();
  static const int kUpFieldNumber = 2;
  inline const ::PbVec3& up() const;
  inline ::PbVec3* mutable_up();
  inline ::PbVec3* release_up();
  
  // optional .PbVec3 dir = 3;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 3;
  inline const ::PbVec3& dir() const;
  inline ::PbVec3* mutable_dir();
  inline ::PbVec3* release_dir();
  
  // @@protoc_insertion_point(class_scope:PbCamera)
 private:
  inline void set_has_eye();
  inline void clear_has_eye();
  inline void set_has_up();
  inline void clear_has_up();
  inline void set_has_dir();
  inline void clear_has_dir();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PbVec3* eye_;
  ::PbVec3* up_;
  ::PbVec3* dir_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_BumpTop_2eproto();
  friend void protobuf_AssignDesc_BumpTop_2eproto();
  friend void protobuf_ShutdownFile_BumpTop_2eproto();
  
  void InitAsDefaultInstance();
  static PbCamera* default_instance_;
};
// ===================================================================


// ===================================================================

// PbBumpTop

// optional .PbHeader header = 1;
inline bool PbBumpTop::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbBumpTop::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbBumpTop::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbBumpTop::clear_header() {
  if (header_ != NULL) header_->::PbHeader::Clear();
  clear_has_header();
}
inline const ::PbHeader& PbBumpTop::header() const {
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::PbHeader* PbBumpTop::mutable_header() {
  set_has_header();
  if (header_ == NULL) header_ = new ::PbHeader;
  return header_;
}
inline ::PbHeader* PbBumpTop::release_header() {
  clear_has_header();
  ::PbHeader* temp = header_;
  header_ = NULL;
  return temp;
}

// optional .PbScene scene = 2;
inline bool PbBumpTop::has_scene() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbBumpTop::set_has_scene() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbBumpTop::clear_has_scene() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbBumpTop::clear_scene() {
  if (scene_ != NULL) scene_->::PbScene::Clear();
  clear_has_scene();
}
inline const ::PbScene& PbBumpTop::scene() const {
  return scene_ != NULL ? *scene_ : *default_instance_->scene_;
}
inline ::PbScene* PbBumpTop::mutable_scene() {
  set_has_scene();
  if (scene_ == NULL) scene_ = new ::PbScene;
  return scene_;
}
inline ::PbScene* PbBumpTop::release_scene() {
  clear_has_scene();
  ::PbScene* temp = scene_;
  scene_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PbHeader

// optional string build = 1;
inline bool PbHeader::has_build() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbHeader::set_has_build() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbHeader::clear_has_build() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbHeader::clear_build() {
  if (build_ != &::google::protobuf::internal::kEmptyString) {
    build_->clear();
  }
  clear_has_build();
}
inline const ::std::string& PbHeader::build() const {
  return *build_;
}
inline void PbHeader::set_build(const ::std::string& value) {
  set_has_build();
  if (build_ == &::google::protobuf::internal::kEmptyString) {
    build_ = new ::std::string;
  }
  build_->assign(value);
}
inline void PbHeader::set_build(const char* value) {
  set_has_build();
  if (build_ == &::google::protobuf::internal::kEmptyString) {
    build_ = new ::std::string;
  }
  build_->assign(value);
}
inline void PbHeader::set_build(const char* value, size_t size) {
  set_has_build();
  if (build_ == &::google::protobuf::internal::kEmptyString) {
    build_ = new ::std::string;
  }
  build_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PbHeader::mutable_build() {
  set_has_build();
  if (build_ == &::google::protobuf::internal::kEmptyString) {
    build_ = new ::std::string;
  }
  return build_;
}
inline ::std::string* PbHeader::release_build() {
  clear_has_build();
  if (build_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = build_;
    build_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 version = 2;
inline bool PbHeader::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbHeader::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbHeader::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbHeader::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 PbHeader::version() const {
  return version_;
}
inline void PbHeader::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// PbScene

// optional string working_directory = 1;
inline bool PbScene::has_working_directory() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbScene::set_has_working_directory() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbScene::clear_has_working_directory() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbScene::clear_working_directory() {
  if (working_directory_ != &::google::protobuf::internal::kEmptyString) {
    working_directory_->clear();
  }
  clear_has_working_directory();
}
inline const ::std::string& PbScene::working_directory() const {
  return *working_directory_;
}
inline void PbScene::set_working_directory(const ::std::string& value) {
  set_has_working_directory();
  if (working_directory_ == &::google::protobuf::internal::kEmptyString) {
    working_directory_ = new ::std::string;
  }
  working_directory_->assign(value);
}
inline void PbScene::set_working_directory(const char* value) {
  set_has_working_directory();
  if (working_directory_ == &::google::protobuf::internal::kEmptyString) {
    working_directory_ = new ::std::string;
  }
  working_directory_->assign(value);
}
inline void PbScene::set_working_directory(const char* value, size_t size) {
  set_has_working_directory();
  if (working_directory_ == &::google::protobuf::internal::kEmptyString) {
    working_directory_ = new ::std::string;
  }
  working_directory_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PbScene::mutable_working_directory() {
  set_has_working_directory();
  if (working_directory_ == &::google::protobuf::internal::kEmptyString) {
    working_directory_ = new ::std::string;
  }
  return working_directory_;
}
inline ::std::string* PbScene::release_working_directory() {
  clear_has_working_directory();
  if (working_directory_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = working_directory_;
    working_directory_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .PbBumpObject free_objects = 10;
inline int PbScene::free_objects_size() const {
  return free_objects_.size();
}
inline void PbScene::clear_free_objects() {
  free_objects_.Clear();
}
inline const ::PbBumpObject& PbScene::free_objects(int index) const {
  return free_objects_.Get(index);
}
inline ::PbBumpObject* PbScene::mutable_free_objects(int index) {
  return free_objects_.Mutable(index);
}
inline ::PbBumpObject* PbScene::add_free_objects() {
  return free_objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PbBumpObject >&
PbScene::free_objects() const {
  return free_objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::PbBumpObject >*
PbScene::mutable_free_objects() {
  return &free_objects_;
}

// repeated .PbBumpObject piles = 11;
inline int PbScene::piles_size() const {
  return piles_.size();
}
inline void PbScene::clear_piles() {
  piles_.Clear();
}
inline const ::PbBumpObject& PbScene::piles(int index) const {
  return piles_.Get(index);
}
inline ::PbBumpObject* PbScene::mutable_piles(int index) {
  return piles_.Mutable(index);
}
inline ::PbBumpObject* PbScene::add_piles() {
  return piles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PbBumpObject >&
PbScene::piles() const {
  return piles_;
}
inline ::google::protobuf::RepeatedPtrField< ::PbBumpObject >*
PbScene::mutable_piles() {
  return &piles_;
}

// optional .PbCamera camera = 12;
inline bool PbScene::has_camera() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbScene::set_has_camera() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbScene::clear_has_camera() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbScene::clear_camera() {
  if (camera_ != NULL) camera_->::PbCamera::Clear();
  clear_has_camera();
}
inline const ::PbCamera& PbScene::camera() const {
  return camera_ != NULL ? *camera_ : *default_instance_->camera_;
}
inline ::PbCamera* PbScene::mutable_camera() {
  set_has_camera();
  if (camera_ == NULL) camera_ = new ::PbCamera;
  return camera_;
}
inline ::PbCamera* PbScene::release_camera() {
  clear_has_camera();
  ::PbCamera* temp = camera_;
  camera_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PbBumpObject

// optional string class_name = 1;
inline bool PbBumpObject::has_class_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbBumpObject::set_has_class_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbBumpObject::clear_has_class_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbBumpObject::clear_class_name() {
  if (class_name_ != &::google::protobuf::internal::kEmptyString) {
    class_name_->clear();
  }
  clear_has_class_name();
}
inline const ::std::string& PbBumpObject::class_name() const {
  return *class_name_;
}
inline void PbBumpObject::set_class_name(const ::std::string& value) {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::kEmptyString) {
    class_name_ = new ::std::string;
  }
  class_name_->assign(value);
}
inline void PbBumpObject::set_class_name(const char* value) {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::kEmptyString) {
    class_name_ = new ::std::string;
  }
  class_name_->assign(value);
}
inline void PbBumpObject::set_class_name(const char* value, size_t size) {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::kEmptyString) {
    class_name_ = new ::std::string;
  }
  class_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PbBumpObject::mutable_class_name() {
  set_has_class_name();
  if (class_name_ == &::google::protobuf::internal::kEmptyString) {
    class_name_ = new ::std::string;
  }
  return class_name_;
}
inline ::std::string* PbBumpObject::release_class_name() {
  clear_has_class_name();
  if (class_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = class_name_;
    class_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional fixed32 type = 2;
inline bool PbBumpObject::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbBumpObject::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbBumpObject::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbBumpObject::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PbBumpObject::type() const {
  return type_;
}
inline void PbBumpObject::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional .PbPoseDims pose_Dims = 3;
inline bool PbBumpObject::has_pose_dims() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbBumpObject::set_has_pose_dims() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbBumpObject::clear_has_pose_dims() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbBumpObject::clear_pose_dims() {
  if (pose_dims_ != NULL) pose_dims_->::PbPoseDims::Clear();
  clear_has_pose_dims();
}
inline const ::PbPoseDims& PbBumpObject::pose_dims() const {
  return pose_dims_ != NULL ? *pose_dims_ : *default_instance_->pose_dims_;
}
inline ::PbPoseDims* PbBumpObject::mutable_pose_dims() {
  set_has_pose_dims();
  if (pose_dims_ == NULL) pose_dims_ = new ::PbPoseDims;
  return pose_dims_;
}
inline ::PbPoseDims* PbBumpObject::release_pose_dims() {
  clear_has_pose_dims();
  ::PbPoseDims* temp = pose_dims_;
  pose_dims_ = NULL;
  return temp;
}

// optional string text = 10;
inline bool PbBumpObject::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbBumpObject::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbBumpObject::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbBumpObject::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& PbBumpObject::text() const {
  return *text_;
}
inline void PbBumpObject::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void PbBumpObject::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void PbBumpObject::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PbBumpObject::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* PbBumpObject::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool text_visible = 11;
inline bool PbBumpObject::has_text_visible() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PbBumpObject::set_has_text_visible() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PbBumpObject::clear_has_text_visible() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PbBumpObject::clear_text_visible() {
  text_visible_ = false;
  clear_has_text_visible();
}
inline bool PbBumpObject::text_visible() const {
  return text_visible_;
}
inline void PbBumpObject::set_text_visible(bool value) {
  set_has_text_visible();
  text_visible_ = value;
}

// optional .PbVec3 pin_point_world = 15;
inline bool PbBumpObject::has_pin_point_world() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PbBumpObject::set_has_pin_point_world() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PbBumpObject::clear_has_pin_point_world() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PbBumpObject::clear_pin_point_world() {
  if (pin_point_world_ != NULL) pin_point_world_->::PbVec3::Clear();
  clear_has_pin_point_world();
}
inline const ::PbVec3& PbBumpObject::pin_point_world() const {
  return pin_point_world_ != NULL ? *pin_point_world_ : *default_instance_->pin_point_world_;
}
inline ::PbVec3* PbBumpObject::mutable_pin_point_world() {
  set_has_pin_point_world();
  if (pin_point_world_ == NULL) pin_point_world_ = new ::PbVec3;
  return pin_point_world_;
}
inline ::PbVec3* PbBumpObject::release_pin_point_world() {
  clear_has_pin_point_world();
  ::PbVec3* temp = pin_point_world_;
  pin_point_world_ = NULL;
  return temp;
}

// optional .PbVec3 pin_point_actor = 16;
inline bool PbBumpObject::has_pin_point_actor() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PbBumpObject::set_has_pin_point_actor() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PbBumpObject::clear_has_pin_point_actor() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PbBumpObject::clear_pin_point_actor() {
  if (pin_point_actor_ != NULL) pin_point_actor_->::PbVec3::Clear();
  clear_has_pin_point_actor();
}
inline const ::PbVec3& PbBumpObject::pin_point_actor() const {
  return pin_point_actor_ != NULL ? *pin_point_actor_ : *default_instance_->pin_point_actor_;
}
inline ::PbVec3* PbBumpObject::mutable_pin_point_actor() {
  set_has_pin_point_actor();
  if (pin_point_actor_ == NULL) pin_point_actor_ = new ::PbVec3;
  return pin_point_actor_;
}
inline ::PbVec3* PbBumpObject::release_pin_point_actor() {
  clear_has_pin_point_actor();
  ::PbVec3* temp = pin_point_actor_;
  pin_point_actor_ = NULL;
  return temp;
}

// optional bool pinned = 17;
inline bool PbBumpObject::has_pinned() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PbBumpObject::set_has_pinned() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PbBumpObject::clear_has_pinned() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PbBumpObject::clear_pinned() {
  pinned_ = false;
  clear_has_pinned();
}
inline bool PbBumpObject::pinned() const {
  return pinned_;
}
inline void PbBumpObject::set_pinned(bool value) {
  set_has_pinned();
  pinned_ = value;
}

// -------------------------------------------------------------------

// PbPile_PbPileItem

// optional .PbBumpObject item = 1;
inline bool PbPile_PbPileItem::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbPile_PbPileItem::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbPile_PbPileItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbPile_PbPileItem::clear_item() {
  if (item_ != NULL) item_->::PbBumpObject::Clear();
  clear_has_item();
}
inline const ::PbBumpObject& PbPile_PbPileItem::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::PbBumpObject* PbPile_PbPileItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::PbBumpObject;
  return item_;
}
inline ::PbBumpObject* PbPile_PbPileItem::release_item() {
  clear_has_item();
  ::PbBumpObject* temp = item_;
  item_ = NULL;
  return temp;
}

// optional .PbMat34 original_world_pose = 2;
inline bool PbPile_PbPileItem::has_original_world_pose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbPile_PbPileItem::set_has_original_world_pose() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbPile_PbPileItem::clear_has_original_world_pose() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbPile_PbPileItem::clear_original_world_pose() {
  if (original_world_pose_ != NULL) original_world_pose_->::PbMat34::Clear();
  clear_has_original_world_pose();
}
inline const ::PbMat34& PbPile_PbPileItem::original_world_pose() const {
  return original_world_pose_ != NULL ? *original_world_pose_ : *default_instance_->original_world_pose_;
}
inline ::PbMat34* PbPile_PbPileItem::mutable_original_world_pose() {
  set_has_original_world_pose();
  if (original_world_pose_ == NULL) original_world_pose_ = new ::PbMat34;
  return original_world_pose_;
}
inline ::PbMat34* PbPile_PbPileItem::release_original_world_pose() {
  clear_has_original_world_pose();
  ::PbMat34* temp = original_world_pose_;
  original_world_pose_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PbPile

// -------------------------------------------------------------------

// PbActor

// -------------------------------------------------------------------

// PbFileSystemActor_PbCachedFilePathDims

// optional string file_path = 1;
inline bool PbFileSystemActor_PbCachedFilePathDims::has_file_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbFileSystemActor_PbCachedFilePathDims::set_has_file_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbFileSystemActor_PbCachedFilePathDims::clear_has_file_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbFileSystemActor_PbCachedFilePathDims::clear_file_path() {
  if (file_path_ != &::google::protobuf::internal::kEmptyString) {
    file_path_->clear();
  }
  clear_has_file_path();
}
inline const ::std::string& PbFileSystemActor_PbCachedFilePathDims::file_path() const {
  return *file_path_;
}
inline void PbFileSystemActor_PbCachedFilePathDims::set_file_path(const ::std::string& value) {
  set_has_file_path();
  if (file_path_ == &::google::protobuf::internal::kEmptyString) {
    file_path_ = new ::std::string;
  }
  file_path_->assign(value);
}
inline void PbFileSystemActor_PbCachedFilePathDims::set_file_path(const char* value) {
  set_has_file_path();
  if (file_path_ == &::google::protobuf::internal::kEmptyString) {
    file_path_ = new ::std::string;
  }
  file_path_->assign(value);
}
inline void PbFileSystemActor_PbCachedFilePathDims::set_file_path(const char* value, size_t size) {
  set_has_file_path();
  if (file_path_ == &::google::protobuf::internal::kEmptyString) {
    file_path_ = new ::std::string;
  }
  file_path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PbFileSystemActor_PbCachedFilePathDims::mutable_file_path() {
  set_has_file_path();
  if (file_path_ == &::google::protobuf::internal::kEmptyString) {
    file_path_ = new ::std::string;
  }
  return file_path_;
}
inline ::std::string* PbFileSystemActor_PbCachedFilePathDims::release_file_path() {
  clear_has_file_path();
  if (file_path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = file_path_;
    file_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .PbVec3 dims = 2;
inline bool PbFileSystemActor_PbCachedFilePathDims::has_dims() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbFileSystemActor_PbCachedFilePathDims::set_has_dims() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbFileSystemActor_PbCachedFilePathDims::clear_has_dims() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbFileSystemActor_PbCachedFilePathDims::clear_dims() {
  if (dims_ != NULL) dims_->::PbVec3::Clear();
  clear_has_dims();
}
inline const ::PbVec3& PbFileSystemActor_PbCachedFilePathDims::dims() const {
  return dims_ != NULL ? *dims_ : *default_instance_->dims_;
}
inline ::PbVec3* PbFileSystemActor_PbCachedFilePathDims::mutable_dims() {
  set_has_dims();
  if (dims_ == NULL) dims_ = new ::PbVec3;
  return dims_;
}
inline ::PbVec3* PbFileSystemActor_PbCachedFilePathDims::release_dims() {
  clear_has_dims();
  ::PbVec3* temp = dims_;
  dims_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PbFileSystemActor

// -------------------------------------------------------------------

// PbCustomActor

// -------------------------------------------------------------------

// PbPhotoFrameActor

// -------------------------------------------------------------------

// PbWebActor

// -------------------------------------------------------------------

// PbCamera

// optional .PbVec3 eye = 1;
inline bool PbCamera::has_eye() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbCamera::set_has_eye() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbCamera::clear_has_eye() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbCamera::clear_eye() {
  if (eye_ != NULL) eye_->::PbVec3::Clear();
  clear_has_eye();
}
inline const ::PbVec3& PbCamera::eye() const {
  return eye_ != NULL ? *eye_ : *default_instance_->eye_;
}
inline ::PbVec3* PbCamera::mutable_eye() {
  set_has_eye();
  if (eye_ == NULL) eye_ = new ::PbVec3;
  return eye_;
}
inline ::PbVec3* PbCamera::release_eye() {
  clear_has_eye();
  ::PbVec3* temp = eye_;
  eye_ = NULL;
  return temp;
}

// optional .PbVec3 up = 2;
inline bool PbCamera::has_up() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbCamera::set_has_up() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbCamera::clear_has_up() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbCamera::clear_up() {
  if (up_ != NULL) up_->::PbVec3::Clear();
  clear_has_up();
}
inline const ::PbVec3& PbCamera::up() const {
  return up_ != NULL ? *up_ : *default_instance_->up_;
}
inline ::PbVec3* PbCamera::mutable_up() {
  set_has_up();
  if (up_ == NULL) up_ = new ::PbVec3;
  return up_;
}
inline ::PbVec3* PbCamera::release_up() {
  clear_has_up();
  ::PbVec3* temp = up_;
  up_ = NULL;
  return temp;
}

// optional .PbVec3 dir = 3;
inline bool PbCamera::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbCamera::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbCamera::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbCamera::clear_dir() {
  if (dir_ != NULL) dir_->::PbVec3::Clear();
  clear_has_dir();
}
inline const ::PbVec3& PbCamera::dir() const {
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::PbVec3* PbCamera::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::PbVec3;
  return dir_;
}
inline ::PbVec3* PbCamera::release_dir() {
  clear_has_dir();
  ::PbVec3* temp = dir_;
  dir_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BumpTop_2eproto__INCLUDED
