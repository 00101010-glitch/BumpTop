// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Nx.proto

#ifndef PROTOBUF_Nx_2eproto__INCLUDED
#define PROTOBUF_Nx_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Nx_2eproto();
void protobuf_AssignDesc_Nx_2eproto();
void protobuf_ShutdownFile_Nx_2eproto();

class PbVec3;
class PbQuat;
class PbMat34;
class PbPoseDims;

// ===================================================================

class PbVec3 : public ::google::protobuf::Message {
 public:
  PbVec3();
  virtual ~PbVec3();
  
  PbVec3(const PbVec3& from);
  
  inline PbVec3& operator=(const PbVec3& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbVec3& default_instance();
  
  void Swap(PbVec3* other);
  
  // implements Message ----------------------------------------------
  
  PbVec3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbVec3& from);
  void MergeFrom(const PbVec3& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float x = 1 [default = 0];
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);
  
  // required float y = 2 [default = 0];
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);
  
  // required float z = 3 [default = 0];
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);
  
  // @@protoc_insertion_point(class_scope:PbVec3)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float x_;
  float y_;
  float z_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Nx_2eproto();
  friend void protobuf_AssignDesc_Nx_2eproto();
  friend void protobuf_ShutdownFile_Nx_2eproto();
  
  void InitAsDefaultInstance();
  static PbVec3* default_instance_;
};
// -------------------------------------------------------------------

class PbQuat : public ::google::protobuf::Message {
 public:
  PbQuat();
  virtual ~PbQuat();
  
  PbQuat(const PbQuat& from);
  
  inline PbQuat& operator=(const PbQuat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbQuat& default_instance();
  
  void Swap(PbQuat* other);
  
  // implements Message ----------------------------------------------
  
  PbQuat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbQuat& from);
  void MergeFrom(const PbQuat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float w = 1 [default = 0];
  inline bool has_w() const;
  inline void clear_w();
  static const int kWFieldNumber = 1;
  inline float w() const;
  inline void set_w(float value);
  
  // required float x = 2 [default = 0];
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);
  
  // required float y = 3 [default = 0];
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);
  
  // required float z = 4 [default = 0];
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 4;
  inline float z() const;
  inline void set_z(float value);
  
  // @@protoc_insertion_point(class_scope:PbQuat)
 private:
  inline void set_has_w();
  inline void clear_has_w();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float w_;
  float x_;
  float y_;
  float z_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_Nx_2eproto();
  friend void protobuf_AssignDesc_Nx_2eproto();
  friend void protobuf_ShutdownFile_Nx_2eproto();
  
  void InitAsDefaultInstance();
  static PbQuat* default_instance_;
};
// -------------------------------------------------------------------

class PbMat34 : public ::google::protobuf::Message {
 public:
  PbMat34();
  virtual ~PbMat34();
  
  PbMat34(const PbMat34& from);
  
  inline PbMat34& operator=(const PbMat34& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbMat34& default_instance();
  
  void Swap(PbMat34* other);
  
  // implements Message ----------------------------------------------
  
  PbMat34* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbMat34& from);
  void MergeFrom(const PbMat34& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .PbQuat quat = 1;
  inline bool has_quat() const;
  inline void clear_quat();
  static const int kQuatFieldNumber = 1;
  inline const ::PbQuat& quat() const;
  inline ::PbQuat* mutable_quat();
  inline ::PbQuat* release_quat();
  
  // required .PbVec3 t = 2;
  inline bool has_t() const;
  inline void clear_t();
  static const int kTFieldNumber = 2;
  inline const ::PbVec3& t() const;
  inline ::PbVec3* mutable_t();
  inline ::PbVec3* release_t();
  
  // @@protoc_insertion_point(class_scope:PbMat34)
 private:
  inline void set_has_quat();
  inline void clear_has_quat();
  inline void set_has_t();
  inline void clear_has_t();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PbQuat* quat_;
  ::PbVec3* t_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Nx_2eproto();
  friend void protobuf_AssignDesc_Nx_2eproto();
  friend void protobuf_ShutdownFile_Nx_2eproto();
  
  void InitAsDefaultInstance();
  static PbMat34* default_instance_;
};
// -------------------------------------------------------------------

class PbPoseDims : public ::google::protobuf::Message {
 public:
  PbPoseDims();
  virtual ~PbPoseDims();
  
  PbPoseDims(const PbPoseDims& from);
  
  inline PbPoseDims& operator=(const PbPoseDims& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbPoseDims& default_instance();
  
  void Swap(PbPoseDims* other);
  
  // implements Message ----------------------------------------------
  
  PbPoseDims* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PbPoseDims& from);
  void MergeFrom(const PbPoseDims& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PbMat34 pose = 1;
  inline bool has_pose() const;
  inline void clear_pose();
  static const int kPoseFieldNumber = 1;
  inline const ::PbMat34& pose() const;
  inline ::PbMat34* mutable_pose();
  inline ::PbMat34* release_pose();
  
  // optional .PbVec3 dims = 2;
  inline bool has_dims() const;
  inline void clear_dims();
  static const int kDimsFieldNumber = 2;
  inline const ::PbVec3& dims() const;
  inline ::PbVec3* mutable_dims();
  inline ::PbVec3* release_dims();
  
  // @@protoc_insertion_point(class_scope:PbPoseDims)
 private:
  inline void set_has_pose();
  inline void clear_has_pose();
  inline void set_has_dims();
  inline void clear_has_dims();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PbMat34* pose_;
  ::PbVec3* dims_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_Nx_2eproto();
  friend void protobuf_AssignDesc_Nx_2eproto();
  friend void protobuf_ShutdownFile_Nx_2eproto();
  
  void InitAsDefaultInstance();
  static PbPoseDims* default_instance_;
};
// ===================================================================


// ===================================================================

// PbVec3

// required float x = 1 [default = 0];
inline bool PbVec3::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbVec3::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbVec3::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbVec3::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float PbVec3::x() const {
  return x_;
}
inline void PbVec3::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2 [default = 0];
inline bool PbVec3::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbVec3::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbVec3::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbVec3::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float PbVec3::y() const {
  return y_;
}
inline void PbVec3::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float z = 3 [default = 0];
inline bool PbVec3::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbVec3::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbVec3::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbVec3::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float PbVec3::z() const {
  return z_;
}
inline void PbVec3::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// PbQuat

// required float w = 1 [default = 0];
inline bool PbQuat::has_w() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbQuat::set_has_w() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbQuat::clear_has_w() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbQuat::clear_w() {
  w_ = 0;
  clear_has_w();
}
inline float PbQuat::w() const {
  return w_;
}
inline void PbQuat::set_w(float value) {
  set_has_w();
  w_ = value;
}

// required float x = 2 [default = 0];
inline bool PbQuat::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbQuat::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbQuat::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbQuat::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float PbQuat::x() const {
  return x_;
}
inline void PbQuat::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 3 [default = 0];
inline bool PbQuat::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbQuat::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PbQuat::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PbQuat::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float PbQuat::y() const {
  return y_;
}
inline void PbQuat::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float z = 4 [default = 0];
inline bool PbQuat::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PbQuat::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PbQuat::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PbQuat::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float PbQuat::z() const {
  return z_;
}
inline void PbQuat::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// PbMat34

// required .PbQuat quat = 1;
inline bool PbMat34::has_quat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbMat34::set_has_quat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbMat34::clear_has_quat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbMat34::clear_quat() {
  if (quat_ != NULL) quat_->::PbQuat::Clear();
  clear_has_quat();
}
inline const ::PbQuat& PbMat34::quat() const {
  return quat_ != NULL ? *quat_ : *default_instance_->quat_;
}
inline ::PbQuat* PbMat34::mutable_quat() {
  set_has_quat();
  if (quat_ == NULL) quat_ = new ::PbQuat;
  return quat_;
}
inline ::PbQuat* PbMat34::release_quat() {
  clear_has_quat();
  ::PbQuat* temp = quat_;
  quat_ = NULL;
  return temp;
}

// required .PbVec3 t = 2;
inline bool PbMat34::has_t() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbMat34::set_has_t() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbMat34::clear_has_t() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbMat34::clear_t() {
  if (t_ != NULL) t_->::PbVec3::Clear();
  clear_has_t();
}
inline const ::PbVec3& PbMat34::t() const {
  return t_ != NULL ? *t_ : *default_instance_->t_;
}
inline ::PbVec3* PbMat34::mutable_t() {
  set_has_t();
  if (t_ == NULL) t_ = new ::PbVec3;
  return t_;
}
inline ::PbVec3* PbMat34::release_t() {
  clear_has_t();
  ::PbVec3* temp = t_;
  t_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// PbPoseDims

// optional .PbMat34 pose = 1;
inline bool PbPoseDims::has_pose() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbPoseDims::set_has_pose() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PbPoseDims::clear_has_pose() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PbPoseDims::clear_pose() {
  if (pose_ != NULL) pose_->::PbMat34::Clear();
  clear_has_pose();
}
inline const ::PbMat34& PbPoseDims::pose() const {
  return pose_ != NULL ? *pose_ : *default_instance_->pose_;
}
inline ::PbMat34* PbPoseDims::mutable_pose() {
  set_has_pose();
  if (pose_ == NULL) pose_ = new ::PbMat34;
  return pose_;
}
inline ::PbMat34* PbPoseDims::release_pose() {
  clear_has_pose();
  ::PbMat34* temp = pose_;
  pose_ = NULL;
  return temp;
}

// optional .PbVec3 dims = 2;
inline bool PbPoseDims::has_dims() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbPoseDims::set_has_dims() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PbPoseDims::clear_has_dims() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PbPoseDims::clear_dims() {
  if (dims_ != NULL) dims_->::PbVec3::Clear();
  clear_has_dims();
}
inline const ::PbVec3& PbPoseDims::dims() const {
  return dims_ != NULL ? *dims_ : *default_instance_->dims_;
}
inline ::PbVec3* PbPoseDims::mutable_dims() {
  set_has_dims();
  if (dims_ == NULL) dims_ = new ::PbVec3;
  return dims_;
}
inline ::PbVec3* PbPoseDims::release_dims() {
  clear_has_dims();
  ::PbVec3* temp = dims_;
  dims_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Nx_2eproto__INCLUDED
